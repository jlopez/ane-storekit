<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:mx="library://ns.adobe.com/flex/mx"
               applicationComplete="applicationCompleteHandler();">
    <fx:Declarations>
    </fx:Declarations>

    <fx:Script><![CDATA[
      import flash.events.Event;

      import com.jesusla.storekit.StoreKit;
      import com.jesusla.storekit.TransactionEvent;

      private function applicationCompleteHandler():void {
        StoreKit.addEventListener(TransactionEvent.TRANSACTION_PURCHASED, storeKit_transactionHandler);
        StoreKit.addEventListener(TransactionEvent.TRANSACTION_FAILED, storeKit_transactionHandler);
        StoreKit.addEventListener(TransactionEvent.TRANSACTION_REVOKED, storeKit_transactionHandler);
        StoreKit.addEventListener(TransactionEvent.TRANSACTION_VERIFY, storeKit_verifyHandler);
      }

      private function storeKit_verifyHandler(event:TransactionEvent):void {
        StoreKit.acknowledgeTransaction(event.transaction);
      }

      private function storeKit_transactionHandler(event:TransactionEvent):void {
        var transaction:Object = event.transaction;
        log(JSON.stringify(transaction, null, 2));
        StoreKit.acknowledgeTransaction(transaction);
      }

      private function logTransaction(transaction:Object):void {
        for (var p:String in transaction) {
          if (p.indexOf("_") == 0)
            continue;
          log("  " + p + ": " + transaction[p]);
        }
      }

      private function doInit():void {
        var skus:String = "sku1,sku2,sku3,sku4,sku5";
        StoreKit.init(skus.split(','), onInit);

        function onInit(status:Boolean):void {
          log("init(): " + status);
        }
      }

      private function doPurchase(id:String):void {
        StoreKit.requestPayment(product.text, callback);

        function callback(success:Boolean):void {
          log("requestPayment(): " + success);
        }
      }

      private function canHandler():void {
        var can:Boolean = StoreKit.canMakePayments;
        log('init: ' + (StoreKit.initialized ? 'yes': 'no') + ', can: ' + (can ? 'yes' : 'no'));
      }

      private function transactionsHandler():void {
        var transactions:Array = StoreKit.transactions;
        log("Found " + transactions.length + " transactions");
        for (var ix:uint = 0; ix < transactions.length; ++ix) {
          var t:Object = transactions[ix];
          log("  " + ix + ". " + t.transactionState + " " + t.transactionIdentifier + " " + t.transactionDate + " " + (t.error ? t.error.code + " " + t.error.domain + " " + t.error.localizedDescription : ''));
        }
      }

      private function rst():void {
        StoreKit.restoreCompletedTransactions(callback);

        function callback(success:Boolean):void {
          log("restoreCompletedTransactions(): " + success);
        }
      }

      private function log(msg:String):void {
        console.text += msg + "\n";
      }

      private function logDump(indent:String, tag:String, obj:Object):void {
        log(indent + tag + "{");
        for (var prop:String in obj)
          log(indent + "  " + prop + ": " + obj[prop]);
        log(indent + "}");
      }
    ]]></fx:Script>

    <s:layout>
      <s:VerticalLayout horizontalAlign="center" verticalAlign="middle"/>
    </s:layout>
    <s:Panel title="StoreKit ANE Test" width="90%" height="90%">
      <s:layout>
        <s:VerticalLayout horizontalAlign="center" gap="32" paddingTop="20" paddingBottom="20"/>
      </s:layout>

      <s:HGroup width="80%" verticalAlign="middle">
        <s:Button label="init" click="doInit()"/>
        <s:Button label="can?" click="canHandler()"/>
        <s:Button label="rst" click="rst()"/>
        <s:Button label="cls" click="console.text=''"/>
      </s:HGroup>

      <s:HGroup width="80%" verticalAlign="middle">
        <s:Button label="buy" click="doPurchase(product.text)"/>
        <s:TextInput id="product" width="100%" text="sku1"/>
      </s:HGroup>

      <s:TextArea id="console" fontSize="14"
        height="100%" width="80%" editable="false"
        doubleClickEnabled="true" doubleClick="console.text = ''"/>

    </s:Panel>

</s:Application>
